version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    parallelism: 1 # run three instances of this job in parallel
    docker: # run the steps with Docker
      - image: cimg/ruby:2.5.8-node # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-ruby
          RAILS_ENV: test
          TZ: /usr/share/zoneinfo/America/Los_Angeles
      - image: circleci/postgres:9.4-alpine # database image
        environment: # environment variables for database
          POSTGRES_USER: circleci-ruby
          POSTGRES_DB: excelsior_test
          POSTGRES_PASSWORD: ""
          TZ: /usr/share/zoneinfo/America/Los_Angeles
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      - run:
          name: Install pronto/rugged/libgit2 dependencies
          command: |
            sudo apt-get update && sudo apt-get install -y --no-install-recommends cmake pkg-config

      # Restore bundle cache
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - rails-excelsior-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-excelsior-bundle-v2-

      - run:
          name: Install Ruby dependencies
          command: bundle install

      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: rails-excelsior-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rake db:schema:load --trace

      - run:
          name: Run test in serial
          command: |
            bundle exec rake test

      # Store SimpleCov report that was generated above
      # See: https://circleci.com/docs/2.0/code-coverage/
      - store_artifacts:
          path: coverage

      # validates coverage with Undercover
      # See: https://medium.com/@mrgrodo/improve-your-ruby-code-reviews-with-actionable-code-coverage-and-undercover-c4480575ea69
      - run:
          name: Check coverage
          command: |
            bundle exec pronto run -f github_pr -c origin/master
